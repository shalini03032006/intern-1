
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as mtp
# load the data set
df = pd.read_csv('/content/Housing.csv')
df.head()
# features and target variable
x=df[['area','bedrooms','bathrooms']]
y=df['price']
# split the data into training and testing sets
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
# create a linear regression model
model=LinearRegression()
# train the model
model.fit(x_train,y_train)
# calculate the MSE value
mse=mean_squared_error(y_test,model.predict(x_test))
# calculate the R-squares score
r2=r2_score(y_test,model.predict(x_test))
print('MSE:',mse)
print('R-squares:',r2)
#  plot the predicted prices vs the actual prices
plt.scatter(y_test,model.predict(x_test))
plt.xlabel('Actual prices')
plt.ylabel('Predicted prices')
plt.title('Actual prices vs Predicted prices')
plt.show()
# data visualization
df[['area','bedrooms','bathrooms','price']].hist(bins=20,figsize=(10,10))
mtp.tight_layout()
mtp.title("Histogram")
mtp.show()
# correlection matrix
corr=df[['area','bedrooms','bathrooms','price']].corr()
plt.figure(figsize=(8,5))
sns.heatmap(corr,annot=True,cmap='coolwarm')
plt.title('Correlation heapmap')
plt.show()
